.include "macros.inc"
.section .text, "ax"  # 0x80005560 - 0x80221F60
.global OSInitMessageQueue
OSInitMessageQueue:
/* 801F97B4 001F6714  7C 08 02 A6 */	mflr r0
/* 801F97B8 001F6718  90 01 00 04 */	stw r0, 4(r1)
/* 801F97BC 001F671C  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 801F97C0 001F6720  93 E1 00 24 */	stw r31, 0x24(r1)
/* 801F97C4 001F6724  3B E5 00 00 */	addi r31, r5, 0
/* 801F97C8 001F6728  93 C1 00 20 */	stw r30, 0x20(r1)
/* 801F97CC 001F672C  3B C4 00 00 */	addi r30, r4, 0
/* 801F97D0 001F6730  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 801F97D4 001F6734  3B A3 00 00 */	addi r29, r3, 0
/* 801F97D8 001F6738  48 00 22 FD */	bl OSInitThreadQueue
/* 801F97DC 001F673C  38 7D 00 08 */	addi r3, r29, 8
/* 801F97E0 001F6740  48 00 22 F5 */	bl OSInitThreadQueue
/* 801F97E4 001F6744  93 DD 00 10 */	stw r30, 0x10(r29)
/* 801F97E8 001F6748  38 00 00 00 */	li r0, 0
/* 801F97EC 001F674C  93 FD 00 14 */	stw r31, 0x14(r29)
/* 801F97F0 001F6750  90 1D 00 18 */	stw r0, 0x18(r29)
/* 801F97F4 001F6754  90 1D 00 1C */	stw r0, 0x1c(r29)
/* 801F97F8 001F6758  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 801F97FC 001F675C  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 801F9800 001F6760  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 801F9804 001F6764  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 801F9808 001F6768  38 21 00 28 */	addi r1, r1, 0x28
/* 801F980C 001F676C  7C 08 03 A6 */	mtlr r0
/* 801F9810 001F6770  4E 80 00 20 */	blr 

.global OSSendMessage
OSSendMessage:
/* 801F9814 001F6774  7C 08 02 A6 */	mflr r0
/* 801F9818 001F6778  90 01 00 04 */	stw r0, 4(r1)
/* 801F981C 001F677C  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 801F9820 001F6780  93 E1 00 24 */	stw r31, 0x24(r1)
/* 801F9824 001F6784  3B E5 00 00 */	addi r31, r5, 0
/* 801F9828 001F6788  93 C1 00 20 */	stw r30, 0x20(r1)
/* 801F982C 001F678C  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 801F9830 001F6790  3B A4 00 00 */	addi r29, r4, 0
/* 801F9834 001F6794  93 81 00 18 */	stw r28, 0x18(r1)
/* 801F9838 001F6798  3B 83 00 00 */	addi r28, r3, 0
/* 801F983C 001F679C  4B FF F7 41 */	bl OSDisableInterrupts
/* 801F9840 001F67A0  3B C3 00 00 */	addi r30, r3, 0
/* 801F9844 001F67A4  57 FF 07 FE */	clrlwi r31, r31, 0x1f
/* 801F9848 001F67A8  48 00 00 24 */	b lbl_801F986C
lbl_801F984C:
/* 801F984C 001F67AC  2C 1F 00 00 */	cmpwi r31, 0
/* 801F9850 001F67B0  40 82 00 14 */	bne lbl_801F9864
/* 801F9854 001F67B4  7F C3 F3 78 */	mr r3, r30
/* 801F9858 001F67B8  4B FF F7 4D */	bl OSRestoreInterrupts
/* 801F985C 001F67BC  38 60 00 00 */	li r3, 0
/* 801F9860 001F67C0  48 00 00 5C */	b lbl_801F98BC
lbl_801F9864:
/* 801F9864 001F67C4  7F 83 E3 78 */	mr r3, r28
/* 801F9868 001F67C8  48 00 31 55 */	bl OSSleepThread
lbl_801F986C:
/* 801F986C 001F67CC  80 DC 00 14 */	lwz r6, 0x14(r28)
/* 801F9870 001F67D0  80 9C 00 1C */	lwz r4, 0x1c(r28)
/* 801F9874 001F67D4  7C 06 20 00 */	cmpw r6, r4
/* 801F9878 001F67D8  40 81 FF D4 */	ble lbl_801F984C
/* 801F987C 001F67DC  80 1C 00 18 */	lwz r0, 0x18(r28)
/* 801F9880 001F67E0  38 7C 00 08 */	addi r3, r28, 8
/* 801F9884 001F67E4  80 BC 00 10 */	lwz r5, 0x10(r28)
/* 801F9888 001F67E8  7C 80 22 14 */	add r4, r0, r4
/* 801F988C 001F67EC  7C 04 33 D6 */	divw r0, r4, r6
/* 801F9890 001F67F0  7C 00 31 D6 */	mullw r0, r0, r6
/* 801F9894 001F67F4  7C 00 20 50 */	subf r0, r0, r4
/* 801F9898 001F67F8  54 00 10 3A */	slwi r0, r0, 2
/* 801F989C 001F67FC  7F A5 01 2E */	stwx r29, r5, r0
/* 801F98A0 001F6800  80 9C 00 1C */	lwz r4, 0x1c(r28)
/* 801F98A4 001F6804  38 04 00 01 */	addi r0, r4, 1
/* 801F98A8 001F6808  90 1C 00 1C */	stw r0, 0x1c(r28)
/* 801F98AC 001F680C  48 00 31 FD */	bl OSWakeupThread
/* 801F98B0 001F6810  7F C3 F3 78 */	mr r3, r30
/* 801F98B4 001F6814  4B FF F6 F1 */	bl OSRestoreInterrupts
/* 801F98B8 001F6818  38 60 00 01 */	li r3, 1
lbl_801F98BC:
/* 801F98BC 001F681C  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 801F98C0 001F6820  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 801F98C4 001F6824  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 801F98C8 001F6828  7C 08 03 A6 */	mtlr r0
/* 801F98CC 001F682C  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 801F98D0 001F6830  83 81 00 18 */	lwz r28, 0x18(r1)
/* 801F98D4 001F6834  38 21 00 28 */	addi r1, r1, 0x28
/* 801F98D8 001F6838  4E 80 00 20 */	blr 

.global OSReceiveMessage
OSReceiveMessage:
/* 801F98DC 001F683C  7C 08 02 A6 */	mflr r0
/* 801F98E0 001F6840  90 01 00 04 */	stw r0, 4(r1)
/* 801F98E4 001F6844  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 801F98E8 001F6848  93 E1 00 24 */	stw r31, 0x24(r1)
/* 801F98EC 001F684C  3B E3 00 00 */	addi r31, r3, 0
/* 801F98F0 001F6850  93 C1 00 20 */	stw r30, 0x20(r1)
/* 801F98F4 001F6854  3B C5 00 00 */	addi r30, r5, 0
/* 801F98F8 001F6858  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 801F98FC 001F685C  93 81 00 18 */	stw r28, 0x18(r1)
/* 801F9900 001F6860  3B 84 00 00 */	addi r28, r4, 0
/* 801F9904 001F6864  4B FF F6 79 */	bl OSDisableInterrupts
/* 801F9908 001F6868  3B A3 00 00 */	addi r29, r3, 0
/* 801F990C 001F686C  57 DE 07 FE */	clrlwi r30, r30, 0x1f
/* 801F9910 001F6870  48 00 00 24 */	b lbl_801F9934
lbl_801F9914:
/* 801F9914 001F6874  2C 1E 00 00 */	cmpwi r30, 0
/* 801F9918 001F6878  40 82 00 14 */	bne lbl_801F992C
/* 801F991C 001F687C  7F A3 EB 78 */	mr r3, r29
/* 801F9920 001F6880  4B FF F6 85 */	bl OSRestoreInterrupts
/* 801F9924 001F6884  38 60 00 00 */	li r3, 0
/* 801F9928 001F6888  48 00 00 70 */	b lbl_801F9998
lbl_801F992C:
/* 801F992C 001F688C  38 7F 00 08 */	addi r3, r31, 8
/* 801F9930 001F6890  48 00 30 8D */	bl OSSleepThread
lbl_801F9934:
/* 801F9934 001F6894  80 1F 00 1C */	lwz r0, 0x1c(r31)
/* 801F9938 001F6898  2C 00 00 00 */	cmpwi r0, 0
/* 801F993C 001F689C  41 82 FF D8 */	beq lbl_801F9914
/* 801F9940 001F68A0  28 1C 00 00 */	cmplwi r28, 0
/* 801F9944 001F68A4  41 82 00 18 */	beq lbl_801F995C
/* 801F9948 001F68A8  80 1F 00 18 */	lwz r0, 0x18(r31)
/* 801F994C 001F68AC  80 7F 00 10 */	lwz r3, 0x10(r31)
/* 801F9950 001F68B0  54 00 10 3A */	slwi r0, r0, 2
/* 801F9954 001F68B4  7C 03 00 2E */	lwzx r0, r3, r0
/* 801F9958 001F68B8  90 1C 00 00 */	stw r0, 0(r28)
lbl_801F995C:
/* 801F995C 001F68BC  80 BF 00 18 */	lwz r5, 0x18(r31)
/* 801F9960 001F68C0  7F E3 FB 78 */	mr r3, r31
/* 801F9964 001F68C4  80 9F 00 14 */	lwz r4, 0x14(r31)
/* 801F9968 001F68C8  38 A5 00 01 */	addi r5, r5, 1
/* 801F996C 001F68CC  7C 05 23 D6 */	divw r0, r5, r4
/* 801F9970 001F68D0  7C 00 21 D6 */	mullw r0, r0, r4
/* 801F9974 001F68D4  7C 00 28 50 */	subf r0, r0, r5
/* 801F9978 001F68D8  90 1F 00 18 */	stw r0, 0x18(r31)
/* 801F997C 001F68DC  80 9F 00 1C */	lwz r4, 0x1c(r31)
/* 801F9980 001F68E0  38 04 FF FF */	addi r0, r4, -1
/* 801F9984 001F68E4  90 1F 00 1C */	stw r0, 0x1c(r31)
/* 801F9988 001F68E8  48 00 31 21 */	bl OSWakeupThread
/* 801F998C 001F68EC  7F A3 EB 78 */	mr r3, r29
/* 801F9990 001F68F0  4B FF F6 15 */	bl OSRestoreInterrupts
/* 801F9994 001F68F4  38 60 00 01 */	li r3, 1
lbl_801F9998:
/* 801F9998 001F68F8  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 801F999C 001F68FC  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 801F99A0 001F6900  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 801F99A4 001F6904  7C 08 03 A6 */	mtlr r0
/* 801F99A8 001F6908  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 801F99AC 001F690C  83 81 00 18 */	lwz r28, 0x18(r1)
/* 801F99B0 001F6910  38 21 00 28 */	addi r1, r1, 0x28
/* 801F99B4 001F6914  4E 80 00 20 */	blr 
