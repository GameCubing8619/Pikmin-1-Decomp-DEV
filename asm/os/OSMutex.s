.include "macros.inc"
.section .text, "ax"  # 0x80005560 - 0x80221F60
.global OSInitMutex
OSInitMutex:
/* 801F99B8 001F6918  7C 08 02 A6 */	mflr r0
/* 801F99BC 001F691C  90 01 00 04 */	stw r0, 4(r1)
/* 801F99C0 001F6920  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 801F99C4 001F6924  93 E1 00 14 */	stw r31, 0x14(r1)
/* 801F99C8 001F6928  7C 7F 1B 78 */	mr r31, r3
/* 801F99CC 001F692C  48 00 21 09 */	bl OSInitThreadQueue
/* 801F99D0 001F6930  38 00 00 00 */	li r0, 0
/* 801F99D4 001F6934  90 1F 00 08 */	stw r0, 8(r31)
/* 801F99D8 001F6938  90 1F 00 0C */	stw r0, 0xc(r31)
/* 801F99DC 001F693C  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 801F99E0 001F6940  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 801F99E4 001F6944  38 21 00 18 */	addi r1, r1, 0x18
/* 801F99E8 001F6948  7C 08 03 A6 */	mtlr r0
/* 801F99EC 001F694C  4E 80 00 20 */	blr 

.global OSLockMutex
OSLockMutex:
/* 801F99F0 001F6950  7C 08 02 A6 */	mflr r0
/* 801F99F4 001F6954  90 01 00 04 */	stw r0, 4(r1)
/* 801F99F8 001F6958  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 801F99FC 001F695C  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 801F9A00 001F6960  93 C1 00 18 */	stw r30, 0x18(r1)
/* 801F9A04 001F6964  93 A1 00 14 */	stw r29, 0x14(r1)
/* 801F9A08 001F6968  93 81 00 10 */	stw r28, 0x10(r1)
/* 801F9A0C 001F696C  7C 7C 1B 78 */	mr r28, r3
/* 801F9A10 001F6970  4B FF F5 6D */	bl OSDisableInterrupts
/* 801F9A14 001F6974  7C 7D 1B 78 */	mr r29, r3
/* 801F9A18 001F6978  48 00 20 CD */	bl OSGetCurrentThread
/* 801F9A1C 001F697C  3B C3 00 00 */	addi r30, r3, 0
/* 801F9A20 001F6980  3B E0 00 00 */	li r31, 0
.L_801F9A24:
/* 801F9A24 001F6984  80 1C 00 08 */	lwz r0, 8(r28)
/* 801F9A28 001F6988  28 00 00 00 */	cmplwi r0, 0
/* 801F9A2C 001F698C  40 82 00 40 */	bne .L_801F9A6C
/* 801F9A30 001F6990  93 DC 00 08 */	stw r30, 8(r28)
/* 801F9A34 001F6994  80 7C 00 0C */	lwz r3, 0xc(r28)
/* 801F9A38 001F6998  38 03 00 01 */	addi r0, r3, 1
/* 801F9A3C 001F699C  90 1C 00 0C */	stw r0, 0xc(r28)
/* 801F9A40 001F69A0  80 7E 02 F8 */	lwz r3, 0x2f8(r30)
/* 801F9A44 001F69A4  28 03 00 00 */	cmplwi r3, 0
/* 801F9A48 001F69A8  40 82 00 0C */	bne .L_801F9A54
/* 801F9A4C 001F69AC  93 9E 02 F4 */	stw r28, 0x2f4(r30)
/* 801F9A50 001F69B0  48 00 00 08 */	b .L_801F9A58
.L_801F9A54:
/* 801F9A54 001F69B4  93 83 00 10 */	stw r28, 0x10(r3)
.L_801F9A58:
/* 801F9A58 001F69B8  90 7C 00 14 */	stw r3, 0x14(r28)
/* 801F9A5C 001F69BC  38 00 00 00 */	li r0, 0
/* 801F9A60 001F69C0  90 1C 00 10 */	stw r0, 0x10(r28)
/* 801F9A64 001F69C4  93 9E 02 F8 */	stw r28, 0x2f8(r30)
/* 801F9A68 001F69C8  48 00 00 3C */	b .L_801F9AA4
.L_801F9A6C:
/* 801F9A6C 001F69CC  7C 00 F0 40 */	cmplw r0, r30
/* 801F9A70 001F69D0  40 82 00 14 */	bne .L_801F9A84
/* 801F9A74 001F69D4  80 7C 00 0C */	lwz r3, 0xc(r28)
/* 801F9A78 001F69D8  38 03 00 01 */	addi r0, r3, 1
/* 801F9A7C 001F69DC  90 1C 00 0C */	stw r0, 0xc(r28)
/* 801F9A80 001F69E0  48 00 00 24 */	b .L_801F9AA4
.L_801F9A84:
/* 801F9A84 001F69E4  93 9E 02 F0 */	stw r28, 0x2f0(r30)
/* 801F9A88 001F69E8  80 7C 00 08 */	lwz r3, 8(r28)
/* 801F9A8C 001F69EC  80 9E 02 D0 */	lwz r4, 0x2d0(r30)
/* 801F9A90 001F69F0  48 00 23 79 */	bl __OSPromoteThread
/* 801F9A94 001F69F4  7F 83 E3 78 */	mr r3, r28
/* 801F9A98 001F69F8  48 00 2F 25 */	bl OSSleepThread
/* 801F9A9C 001F69FC  93 FE 02 F0 */	stw r31, 0x2f0(r30)
/* 801F9AA0 001F6A00  4B FF FF 84 */	b .L_801F9A24
.L_801F9AA4:
/* 801F9AA4 001F6A04  7F A3 EB 78 */	mr r3, r29
/* 801F9AA8 001F6A08  4B FF F4 FD */	bl OSRestoreInterrupts
/* 801F9AAC 001F6A0C  80 01 00 24 */	lwz r0, 0x24(r1)
/* 801F9AB0 001F6A10  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 801F9AB4 001F6A14  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 801F9AB8 001F6A18  7C 08 03 A6 */	mtlr r0
/* 801F9ABC 001F6A1C  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 801F9AC0 001F6A20  83 81 00 10 */	lwz r28, 0x10(r1)
/* 801F9AC4 001F6A24  38 21 00 20 */	addi r1, r1, 0x20
/* 801F9AC8 001F6A28  4E 80 00 20 */	blr 

.global OSUnlockMutex
OSUnlockMutex:
/* 801F9ACC 001F6A2C  7C 08 02 A6 */	mflr r0
/* 801F9AD0 001F6A30  90 01 00 04 */	stw r0, 4(r1)
/* 801F9AD4 001F6A34  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 801F9AD8 001F6A38  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 801F9ADC 001F6A3C  93 C1 00 18 */	stw r30, 0x18(r1)
/* 801F9AE0 001F6A40  93 A1 00 14 */	stw r29, 0x14(r1)
/* 801F9AE4 001F6A44  7C 7D 1B 78 */	mr r29, r3
/* 801F9AE8 001F6A48  4B FF F4 95 */	bl OSDisableInterrupts
/* 801F9AEC 001F6A4C  7C 7F 1B 78 */	mr r31, r3
/* 801F9AF0 001F6A50  48 00 1F F5 */	bl OSGetCurrentThread
/* 801F9AF4 001F6A54  80 1D 00 08 */	lwz r0, 8(r29)
/* 801F9AF8 001F6A58  3B C3 00 00 */	addi r30, r3, 0
/* 801F9AFC 001F6A5C  7C 00 F0 40 */	cmplw r0, r30
/* 801F9B00 001F6A60  40 82 00 70 */	bne .L_801F9B70
/* 801F9B04 001F6A64  80 7D 00 0C */	lwz r3, 0xc(r29)
/* 801F9B08 001F6A68  34 03 FF FF */	addic. r0, r3, -1
/* 801F9B0C 001F6A6C  90 1D 00 0C */	stw r0, 0xc(r29)
/* 801F9B10 001F6A70  40 82 00 60 */	bne .L_801F9B70
/* 801F9B14 001F6A74  80 7D 00 10 */	lwz r3, 0x10(r29)
/* 801F9B18 001F6A78  80 9D 00 14 */	lwz r4, 0x14(r29)
/* 801F9B1C 001F6A7C  28 03 00 00 */	cmplwi r3, 0
/* 801F9B20 001F6A80  40 82 00 0C */	bne .L_801F9B2C
/* 801F9B24 001F6A84  90 9E 02 F8 */	stw r4, 0x2f8(r30)
/* 801F9B28 001F6A88  48 00 00 08 */	b .L_801F9B30
.L_801F9B2C:
/* 801F9B2C 001F6A8C  90 83 00 14 */	stw r4, 0x14(r3)
.L_801F9B30:
/* 801F9B30 001F6A90  28 04 00 00 */	cmplwi r4, 0
/* 801F9B34 001F6A94  40 82 00 0C */	bne .L_801F9B40
/* 801F9B38 001F6A98  90 7E 02 F4 */	stw r3, 0x2f4(r30)
/* 801F9B3C 001F6A9C  48 00 00 08 */	b .L_801F9B44
.L_801F9B40:
/* 801F9B40 001F6AA0  90 64 00 10 */	stw r3, 0x10(r4)
.L_801F9B44:
/* 801F9B44 001F6AA4  38 00 00 00 */	li r0, 0
/* 801F9B48 001F6AA8  90 1D 00 08 */	stw r0, 8(r29)
/* 801F9B4C 001F6AAC  80 7E 02 D0 */	lwz r3, 0x2d0(r30)
/* 801F9B50 001F6AB0  80 1E 02 D4 */	lwz r0, 0x2d4(r30)
/* 801F9B54 001F6AB4  7C 03 00 00 */	cmpw r3, r0
/* 801F9B58 001F6AB8  40 80 00 10 */	bge .L_801F9B68
/* 801F9B5C 001F6ABC  7F C3 F3 78 */	mr r3, r30
/* 801F9B60 001F6AC0  48 00 20 AD */	bl __OSGetEffectivePriority
/* 801F9B64 001F6AC4  90 7E 02 D0 */	stw r3, 0x2d0(r30)
.L_801F9B68:
/* 801F9B68 001F6AC8  7F A3 EB 78 */	mr r3, r29
/* 801F9B6C 001F6ACC  48 00 2F 3D */	bl OSWakeupThread
.L_801F9B70:
/* 801F9B70 001F6AD0  7F E3 FB 78 */	mr r3, r31
/* 801F9B74 001F6AD4  4B FF F4 31 */	bl OSRestoreInterrupts
/* 801F9B78 001F6AD8  80 01 00 24 */	lwz r0, 0x24(r1)
/* 801F9B7C 001F6ADC  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 801F9B80 001F6AE0  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 801F9B84 001F6AE4  7C 08 03 A6 */	mtlr r0
/* 801F9B88 001F6AE8  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 801F9B8C 001F6AEC  38 21 00 20 */	addi r1, r1, 0x20
/* 801F9B90 001F6AF0  4E 80 00 20 */	blr 

.global __OSUnlockAllMutex
__OSUnlockAllMutex:
/* 801F9B94 001F6AF4  7C 08 02 A6 */	mflr r0
/* 801F9B98 001F6AF8  90 01 00 04 */	stw r0, 4(r1)
/* 801F9B9C 001F6AFC  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 801F9BA0 001F6B00  93 E1 00 14 */	stw r31, 0x14(r1)
/* 801F9BA4 001F6B04  3B E0 00 00 */	li r31, 0
/* 801F9BA8 001F6B08  93 C1 00 10 */	stw r30, 0x10(r1)
/* 801F9BAC 001F6B0C  3B C3 00 00 */	addi r30, r3, 0
/* 801F9BB0 001F6B10  48 00 00 30 */	b .L_801F9BE0
.L_801F9BB4:
/* 801F9BB4 001F6B14  80 A4 00 10 */	lwz r5, 0x10(r4)
/* 801F9BB8 001F6B18  38 64 00 00 */	addi r3, r4, 0
/* 801F9BBC 001F6B1C  28 05 00 00 */	cmplwi r5, 0
/* 801F9BC0 001F6B20  40 82 00 0C */	bne .L_801F9BCC
/* 801F9BC4 001F6B24  93 FE 02 F8 */	stw r31, 0x2f8(r30)
/* 801F9BC8 001F6B28  48 00 00 08 */	b .L_801F9BD0
.L_801F9BCC:
/* 801F9BCC 001F6B2C  93 E5 00 14 */	stw r31, 0x14(r5)
.L_801F9BD0:
/* 801F9BD0 001F6B30  90 BE 02 F4 */	stw r5, 0x2f4(r30)
/* 801F9BD4 001F6B34  93 E4 00 0C */	stw r31, 0xc(r4)
/* 801F9BD8 001F6B38  93 E4 00 08 */	stw r31, 8(r4)
/* 801F9BDC 001F6B3C  48 00 2E CD */	bl OSWakeupThread
.L_801F9BE0:
/* 801F9BE0 001F6B40  80 9E 02 F4 */	lwz r4, 0x2f4(r30)
/* 801F9BE4 001F6B44  28 04 00 00 */	cmplwi r4, 0
/* 801F9BE8 001F6B48  40 82 FF CC */	bne .L_801F9BB4
/* 801F9BEC 001F6B4C  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 801F9BF0 001F6B50  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 801F9BF4 001F6B54  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 801F9BF8 001F6B58  7C 08 03 A6 */	mtlr r0
/* 801F9BFC 001F6B5C  38 21 00 18 */	addi r1, r1, 0x18
/* 801F9C00 001F6B60  4E 80 00 20 */	blr 

.global OSInitCond
OSInitCond:
/* 801F9C04 001F6B64  7C 08 02 A6 */	mflr r0
/* 801F9C08 001F6B68  90 01 00 04 */	stw r0, 4(r1)
/* 801F9C0C 001F6B6C  94 21 FF F8 */	stwu r1, -8(r1)
/* 801F9C10 001F6B70  48 00 1E C5 */	bl OSInitThreadQueue
/* 801F9C14 001F6B74  80 01 00 0C */	lwz r0, 0xc(r1)
/* 801F9C18 001F6B78  38 21 00 08 */	addi r1, r1, 8
/* 801F9C1C 001F6B7C  7C 08 03 A6 */	mtlr r0
/* 801F9C20 001F6B80  4E 80 00 20 */	blr 

.global OSWaitCond
OSWaitCond:
/* 801F9C24 001F6B84  7C 08 02 A6 */	mflr r0
/* 801F9C28 001F6B88  90 01 00 04 */	stw r0, 4(r1)
/* 801F9C2C 001F6B8C  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 801F9C30 001F6B90  BF 61 00 14 */	stmw r27, 0x14(r1)
/* 801F9C34 001F6B94  3B 63 00 00 */	addi r27, r3, 0
/* 801F9C38 001F6B98  3B 84 00 00 */	addi r28, r4, 0
/* 801F9C3C 001F6B9C  4B FF F3 41 */	bl OSDisableInterrupts
/* 801F9C40 001F6BA0  7C 7F 1B 78 */	mr r31, r3
/* 801F9C44 001F6BA4  48 00 1E A1 */	bl OSGetCurrentThread
/* 801F9C48 001F6BA8  80 1C 00 08 */	lwz r0, 8(r28)
/* 801F9C4C 001F6BAC  3B C3 00 00 */	addi r30, r3, 0
/* 801F9C50 001F6BB0  7C 00 F0 40 */	cmplw r0, r30
/* 801F9C54 001F6BB4  40 82 00 88 */	bne .L_801F9CDC
/* 801F9C58 001F6BB8  83 BC 00 0C */	lwz r29, 0xc(r28)
/* 801F9C5C 001F6BBC  38 00 00 00 */	li r0, 0
/* 801F9C60 001F6BC0  90 1C 00 0C */	stw r0, 0xc(r28)
/* 801F9C64 001F6BC4  80 7C 00 10 */	lwz r3, 0x10(r28)
/* 801F9C68 001F6BC8  80 9C 00 14 */	lwz r4, 0x14(r28)
/* 801F9C6C 001F6BCC  28 03 00 00 */	cmplwi r3, 0
/* 801F9C70 001F6BD0  40 82 00 0C */	bne .L_801F9C7C
/* 801F9C74 001F6BD4  90 9E 02 F8 */	stw r4, 0x2f8(r30)
/* 801F9C78 001F6BD8  48 00 00 08 */	b .L_801F9C80
.L_801F9C7C:
/* 801F9C7C 001F6BDC  90 83 00 14 */	stw r4, 0x14(r3)
.L_801F9C80:
/* 801F9C80 001F6BE0  28 04 00 00 */	cmplwi r4, 0
/* 801F9C84 001F6BE4  40 82 00 0C */	bne .L_801F9C90
/* 801F9C88 001F6BE8  90 7E 02 F4 */	stw r3, 0x2f4(r30)
/* 801F9C8C 001F6BEC  48 00 00 08 */	b .L_801F9C94
.L_801F9C90:
/* 801F9C90 001F6BF0  90 64 00 10 */	stw r3, 0x10(r4)
.L_801F9C94:
/* 801F9C94 001F6BF4  38 00 00 00 */	li r0, 0
/* 801F9C98 001F6BF8  90 1C 00 08 */	stw r0, 8(r28)
/* 801F9C9C 001F6BFC  80 7E 02 D0 */	lwz r3, 0x2d0(r30)
/* 801F9CA0 001F6C00  80 1E 02 D4 */	lwz r0, 0x2d4(r30)
/* 801F9CA4 001F6C04  7C 03 00 00 */	cmpw r3, r0
/* 801F9CA8 001F6C08  40 80 00 10 */	bge .L_801F9CB8
/* 801F9CAC 001F6C0C  7F C3 F3 78 */	mr r3, r30
/* 801F9CB0 001F6C10  48 00 1F 5D */	bl __OSGetEffectivePriority
/* 801F9CB4 001F6C14  90 7E 02 D0 */	stw r3, 0x2d0(r30)
.L_801F9CB8:
/* 801F9CB8 001F6C18  48 00 1E 6D */	bl OSDisableScheduler
/* 801F9CBC 001F6C1C  7F 83 E3 78 */	mr r3, r28
/* 801F9CC0 001F6C20  48 00 2D E9 */	bl OSWakeupThread
/* 801F9CC4 001F6C24  48 00 1E A1 */	bl OSEnableScheduler
/* 801F9CC8 001F6C28  7F 63 DB 78 */	mr r3, r27
/* 801F9CCC 001F6C2C  48 00 2C F1 */	bl OSSleepThread
/* 801F9CD0 001F6C30  7F 83 E3 78 */	mr r3, r28
/* 801F9CD4 001F6C34  4B FF FD 1D */	bl OSLockMutex
/* 801F9CD8 001F6C38  93 BC 00 0C */	stw r29, 0xc(r28)
.L_801F9CDC:
/* 801F9CDC 001F6C3C  7F E3 FB 78 */	mr r3, r31
/* 801F9CE0 001F6C40  4B FF F2 C5 */	bl OSRestoreInterrupts
/* 801F9CE4 001F6C44  BB 61 00 14 */	lmw r27, 0x14(r1)
/* 801F9CE8 001F6C48  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 801F9CEC 001F6C4C  38 21 00 28 */	addi r1, r1, 0x28
/* 801F9CF0 001F6C50  7C 08 03 A6 */	mtlr r0
/* 801F9CF4 001F6C54  4E 80 00 20 */	blr 

.global OSSignalCond
OSSignalCond:
/* 801F9CF8 001F6C58  7C 08 02 A6 */	mflr r0
/* 801F9CFC 001F6C5C  90 01 00 04 */	stw r0, 4(r1)
/* 801F9D00 001F6C60  94 21 FF F8 */	stwu r1, -8(r1)
/* 801F9D04 001F6C64  48 00 2D A5 */	bl OSWakeupThread
/* 801F9D08 001F6C68  80 01 00 0C */	lwz r0, 0xc(r1)
/* 801F9D0C 001F6C6C  38 21 00 08 */	addi r1, r1, 8
/* 801F9D10 001F6C70  7C 08 03 A6 */	mtlr r0
/* 801F9D14 001F6C74  4E 80 00 20 */	blr 

.global __OSCheckMutex
__OSCheckMutex:
/* 801F9D18 001F6C78  80 83 00 00 */	lwz r4, 0(r3)
/* 801F9D1C 001F6C7C  38 E0 00 00 */	li r7, 0
/* 801F9D20 001F6C80  28 04 00 00 */	cmplwi r4, 0
/* 801F9D24 001F6C84  41 82 00 18 */	beq .L_801F9D3C
/* 801F9D28 001F6C88  80 04 02 E4 */	lwz r0, 0x2e4(r4)
/* 801F9D2C 001F6C8C  28 00 00 00 */	cmplwi r0, 0
/* 801F9D30 001F6C90  41 82 00 0C */	beq .L_801F9D3C
/* 801F9D34 001F6C94  38 60 00 00 */	li r3, 0
/* 801F9D38 001F6C98  4E 80 00 20 */	blr 
.L_801F9D3C:
/* 801F9D3C 001F6C9C  80 A3 00 04 */	lwz r5, 4(r3)
/* 801F9D40 001F6CA0  28 05 00 00 */	cmplwi r5, 0
/* 801F9D44 001F6CA4  41 82 00 18 */	beq .L_801F9D5C
/* 801F9D48 001F6CA8  80 05 02 E0 */	lwz r0, 0x2e0(r5)
/* 801F9D4C 001F6CAC  28 00 00 00 */	cmplwi r0, 0
/* 801F9D50 001F6CB0  41 82 00 0C */	beq .L_801F9D5C
/* 801F9D54 001F6CB4  38 60 00 00 */	li r3, 0
/* 801F9D58 001F6CB8  4E 80 00 20 */	blr 
.L_801F9D5C:
/* 801F9D5C 001F6CBC  7C 86 23 78 */	mr r6, r4
/* 801F9D60 001F6CC0  48 00 00 74 */	b .L_801F9DD4
.L_801F9D64:
/* 801F9D64 001F6CC4  80 86 02 E0 */	lwz r4, 0x2e0(r6)
/* 801F9D68 001F6CC8  28 04 00 00 */	cmplwi r4, 0
/* 801F9D6C 001F6CCC  41 82 00 18 */	beq .L_801F9D84
/* 801F9D70 001F6CD0  80 04 02 E4 */	lwz r0, 0x2e4(r4)
/* 801F9D74 001F6CD4  7C 06 00 40 */	cmplw r6, r0
/* 801F9D78 001F6CD8  41 82 00 0C */	beq .L_801F9D84
/* 801F9D7C 001F6CDC  38 60 00 00 */	li r3, 0
/* 801F9D80 001F6CE0  4E 80 00 20 */	blr 
.L_801F9D84:
/* 801F9D84 001F6CE4  80 A6 02 E4 */	lwz r5, 0x2e4(r6)
/* 801F9D88 001F6CE8  28 05 00 00 */	cmplwi r5, 0
/* 801F9D8C 001F6CEC  41 82 00 18 */	beq .L_801F9DA4
/* 801F9D90 001F6CF0  80 05 02 E0 */	lwz r0, 0x2e0(r5)
/* 801F9D94 001F6CF4  7C 06 00 40 */	cmplw r6, r0
/* 801F9D98 001F6CF8  41 82 00 0C */	beq .L_801F9DA4
/* 801F9D9C 001F6CFC  38 60 00 00 */	li r3, 0
/* 801F9DA0 001F6D00  4E 80 00 20 */	blr 
.L_801F9DA4:
/* 801F9DA4 001F6D04  A0 06 02 C8 */	lhz r0, 0x2c8(r6)
/* 801F9DA8 001F6D08  28 00 00 04 */	cmplwi r0, 4
/* 801F9DAC 001F6D0C  41 82 00 0C */	beq .L_801F9DB8
/* 801F9DB0 001F6D10  38 60 00 00 */	li r3, 0
/* 801F9DB4 001F6D14  4E 80 00 20 */	blr 
.L_801F9DB8:
/* 801F9DB8 001F6D18  80 06 02 D0 */	lwz r0, 0x2d0(r6)
/* 801F9DBC 001F6D1C  7C 00 38 00 */	cmpw r0, r7
/* 801F9DC0 001F6D20  40 80 00 0C */	bge .L_801F9DCC
/* 801F9DC4 001F6D24  38 60 00 00 */	li r3, 0
/* 801F9DC8 001F6D28  4E 80 00 20 */	blr 
.L_801F9DCC:
/* 801F9DCC 001F6D2C  7C 07 03 78 */	mr r7, r0
/* 801F9DD0 001F6D30  38 C4 00 00 */	addi r6, r4, 0
.L_801F9DD4:
/* 801F9DD4 001F6D34  28 06 00 00 */	cmplwi r6, 0
/* 801F9DD8 001F6D38  40 82 FF 8C */	bne .L_801F9D64
/* 801F9DDC 001F6D3C  80 03 00 08 */	lwz r0, 8(r3)
/* 801F9DE0 001F6D40  28 00 00 00 */	cmplwi r0, 0
/* 801F9DE4 001F6D44  41 82 00 18 */	beq .L_801F9DFC
/* 801F9DE8 001F6D48  80 03 00 0C */	lwz r0, 0xc(r3)
/* 801F9DEC 001F6D4C  2C 00 00 00 */	cmpwi r0, 0
/* 801F9DF0 001F6D50  41 81 00 20 */	bgt .L_801F9E10
/* 801F9DF4 001F6D54  38 60 00 00 */	li r3, 0
/* 801F9DF8 001F6D58  4E 80 00 20 */	blr 
.L_801F9DFC:
/* 801F9DFC 001F6D5C  80 03 00 0C */	lwz r0, 0xc(r3)
/* 801F9E00 001F6D60  2C 00 00 00 */	cmpwi r0, 0
/* 801F9E04 001F6D64  41 82 00 0C */	beq .L_801F9E10
/* 801F9E08 001F6D68  38 60 00 00 */	li r3, 0
/* 801F9E0C 001F6D6C  4E 80 00 20 */	blr 
.L_801F9E10:
/* 801F9E10 001F6D70  38 60 00 01 */	li r3, 1
/* 801F9E14 001F6D74  4E 80 00 20 */	blr 

.global __OSCheckDeadLock
__OSCheckDeadLock:
/* 801F9E18 001F6D78  80 83 02 F0 */	lwz r4, 0x2f0(r3)
/* 801F9E1C 001F6D7C  48 00 00 18 */	b .L_801F9E34
.L_801F9E20:
/* 801F9E20 001F6D80  7C 04 18 40 */	cmplw r4, r3
/* 801F9E24 001F6D84  40 82 00 0C */	bne .L_801F9E30
/* 801F9E28 001F6D88  38 60 00 01 */	li r3, 1
/* 801F9E2C 001F6D8C  4E 80 00 20 */	blr 
.L_801F9E30:
/* 801F9E30 001F6D90  80 84 02 F0 */	lwz r4, 0x2f0(r4)
.L_801F9E34:
/* 801F9E34 001F6D94  28 04 00 00 */	cmplwi r4, 0
/* 801F9E38 001F6D98  41 82 00 10 */	beq .L_801F9E48
/* 801F9E3C 001F6D9C  80 84 00 08 */	lwz r4, 8(r4)
/* 801F9E40 001F6DA0  28 04 00 00 */	cmplwi r4, 0
/* 801F9E44 001F6DA4  40 82 FF DC */	bne .L_801F9E20
.L_801F9E48:
/* 801F9E48 001F6DA8  38 60 00 00 */	li r3, 0
/* 801F9E4C 001F6DAC  4E 80 00 20 */	blr 

.global __OSCheckMutexes
__OSCheckMutexes:
/* 801F9E50 001F6DB0  7C 08 02 A6 */	mflr r0
/* 801F9E54 001F6DB4  90 01 00 04 */	stw r0, 4(r1)
/* 801F9E58 001F6DB8  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 801F9E5C 001F6DBC  93 E1 00 14 */	stw r31, 0x14(r1)
/* 801F9E60 001F6DC0  93 C1 00 10 */	stw r30, 0x10(r1)
/* 801F9E64 001F6DC4  7C 7E 1B 78 */	mr r30, r3
/* 801F9E68 001F6DC8  83 E3 02 F4 */	lwz r31, 0x2f4(r3)
/* 801F9E6C 001F6DCC  48 00 00 34 */	b .L_801F9EA0
.L_801F9E70:
/* 801F9E70 001F6DD0  80 1F 00 08 */	lwz r0, 8(r31)
/* 801F9E74 001F6DD4  7C 00 F0 40 */	cmplw r0, r30
/* 801F9E78 001F6DD8  41 82 00 0C */	beq .L_801F9E84
/* 801F9E7C 001F6DDC  38 60 00 00 */	li r3, 0
/* 801F9E80 001F6DE0  48 00 00 2C */	b .L_801F9EAC
.L_801F9E84:
/* 801F9E84 001F6DE4  7F E3 FB 78 */	mr r3, r31
/* 801F9E88 001F6DE8  4B FF FE 91 */	bl __OSCheckMutex
/* 801F9E8C 001F6DEC  2C 03 00 00 */	cmpwi r3, 0
/* 801F9E90 001F6DF0  40 82 00 0C */	bne .L_801F9E9C
/* 801F9E94 001F6DF4  38 60 00 00 */	li r3, 0
/* 801F9E98 001F6DF8  48 00 00 14 */	b .L_801F9EAC
.L_801F9E9C:
/* 801F9E9C 001F6DFC  83 FF 00 10 */	lwz r31, 0x10(r31)
.L_801F9EA0:
/* 801F9EA0 001F6E00  28 1F 00 00 */	cmplwi r31, 0
/* 801F9EA4 001F6E04  40 82 FF CC */	bne .L_801F9E70
/* 801F9EA8 001F6E08  38 60 00 01 */	li r3, 1
.L_801F9EAC:
/* 801F9EAC 001F6E0C  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 801F9EB0 001F6E10  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 801F9EB4 001F6E14  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 801F9EB8 001F6E18  7C 08 03 A6 */	mtlr r0
/* 801F9EBC 001F6E1C  38 21 00 18 */	addi r1, r1, 0x18
/* 801F9EC0 001F6E20  4E 80 00 20 */	blr 
