.include "macros.inc"
.section .text, "ax"  # 0x80005560 - 0x80221F60
.fn TRKInitializeEventQueue, global
/* 8021C0B4 00219014  7C 08 02 A6 */	mflr r0
/* 8021C0B8 00219018  3C 60 80 3D */	lis r3, gTRKEventQueue@ha
/* 8021C0BC 0021901C  90 01 00 04 */	stw r0, 4(r1)
/* 8021C0C0 00219020  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 8021C0C4 00219024  93 E1 00 0C */	stw r31, 0xc(r1)
/* 8021C0C8 00219028  3B E3 42 F0 */	addi r31, r3, gTRKEventQueue@l
/* 8021C0CC 0021902C  38 7F 00 00 */	addi r3, r31, 0
/* 8021C0D0 00219030  48 00 25 C9 */	bl TRKInitializeMutex
/* 8021C0D4 00219034  7F E3 FB 78 */	mr r3, r31
/* 8021C0D8 00219038  48 00 25 C9 */	bl TRKAcquireMutex
/* 8021C0DC 0021903C  38 60 00 00 */	li r3, 0
/* 8021C0E0 00219040  90 7F 00 04 */	stw r3, 4(r31)
/* 8021C0E4 00219044  38 00 01 00 */	li r0, 0x100
/* 8021C0E8 00219048  90 7F 00 08 */	stw r3, 8(r31)
/* 8021C0EC 0021904C  7F E3 FB 78 */	mr r3, r31
/* 8021C0F0 00219050  90 1F 00 24 */	stw r0, 0x24(r31)
/* 8021C0F4 00219054  48 00 25 B5 */	bl TRKReleaseMutex
/* 8021C0F8 00219058  38 60 00 00 */	li r3, 0
/* 8021C0FC 0021905C  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 8021C100 00219060  38 21 00 10 */	addi r1, r1, 0x10
/* 8021C104 00219064  80 01 00 04 */	lwz r0, 4(r1)
/* 8021C108 00219068  7C 08 03 A6 */	mtlr r0
/* 8021C10C 0021906C  4E 80 00 20 */	blr 
.endfn TRKInitializeEventQueue

.fn TRKCopyEvent, global
/* 8021C110 00219070  7C 08 02 A6 */	mflr r0
/* 8021C114 00219074  38 A0 00 0C */	li r5, 0xc
/* 8021C118 00219078  90 01 00 04 */	stw r0, 4(r1)
/* 8021C11C 0021907C  94 21 FF F8 */	stwu r1, -8(r1)
/* 8021C120 00219080  4B DE 73 45 */	bl TRK_memcpy
/* 8021C124 00219084  38 21 00 08 */	addi r1, r1, 8
/* 8021C128 00219088  80 01 00 04 */	lwz r0, 4(r1)
/* 8021C12C 0021908C  7C 08 03 A6 */	mtlr r0
/* 8021C130 00219090  4E 80 00 20 */	blr 
.endfn TRKCopyEvent

.fn TRKGetNextEvent, global
/* 8021C134 00219094  7C 08 02 A6 */	mflr r0
/* 8021C138 00219098  3C 80 80 3D */	lis r4, gTRKEventQueue@ha
/* 8021C13C 0021909C  90 01 00 04 */	stw r0, 4(r1)
/* 8021C140 002190A0  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 8021C144 002190A4  93 E1 00 14 */	stw r31, 0x14(r1)
/* 8021C148 002190A8  3B E4 42 F0 */	addi r31, r4, gTRKEventQueue@l
/* 8021C14C 002190AC  93 C1 00 10 */	stw r30, 0x10(r1)
/* 8021C150 002190B0  93 A1 00 0C */	stw r29, 0xc(r1)
/* 8021C154 002190B4  3B A0 00 00 */	li r29, 0
/* 8021C158 002190B8  93 81 00 08 */	stw r28, 8(r1)
/* 8021C15C 002190BC  3B 83 00 00 */	addi r28, r3, 0
/* 8021C160 002190C0  38 7F 00 00 */	addi r3, r31, 0
/* 8021C164 002190C4  48 00 25 3D */	bl TRKAcquireMutex
/* 8021C168 002190C8  3B DF 00 04 */	addi r30, r31, 4
/* 8021C16C 002190CC  80 1F 00 04 */	lwz r0, 4(r31)
/* 8021C170 002190D0  2C 00 00 00 */	cmpwi r0, 0
/* 8021C174 002190D4  40 81 00 50 */	ble .L_8021C1C4
/* 8021C178 002190D8  3B BF 00 08 */	addi r29, r31, 8
/* 8021C17C 002190DC  80 1F 00 08 */	lwz r0, 8(r31)
/* 8021C180 002190E0  38 7C 00 00 */	addi r3, r28, 0
/* 8021C184 002190E4  1C 00 00 0C */	mulli r0, r0, 0xc
/* 8021C188 002190E8  7C 9F 02 14 */	add r4, r31, r0
/* 8021C18C 002190EC  38 84 00 0C */	addi r4, r4, 0xc
/* 8021C190 002190F0  4B FF FF 81 */	bl TRKCopyEvent
/* 8021C194 002190F4  80 7E 00 00 */	lwz r3, 0(r30)
/* 8021C198 002190F8  38 03 FF FF */	addi r0, r3, -1
/* 8021C19C 002190FC  90 1E 00 00 */	stw r0, 0(r30)
/* 8021C1A0 00219100  80 7D 00 00 */	lwz r3, 0(r29)
/* 8021C1A4 00219104  38 03 00 01 */	addi r0, r3, 1
/* 8021C1A8 00219108  90 1D 00 00 */	stw r0, 0(r29)
/* 8021C1AC 0021910C  80 1D 00 00 */	lwz r0, 0(r29)
/* 8021C1B0 00219110  2C 00 00 02 */	cmpwi r0, 2
/* 8021C1B4 00219114  40 82 00 0C */	bne .L_8021C1C0
/* 8021C1B8 00219118  38 00 00 00 */	li r0, 0
/* 8021C1BC 0021911C  90 1D 00 00 */	stw r0, 0(r29)
.L_8021C1C0:
/* 8021C1C0 00219120  3B A0 00 01 */	li r29, 1
.L_8021C1C4:
/* 8021C1C4 00219124  3C 60 80 3D */	lis r3, gTRKEventQueue@ha
/* 8021C1C8 00219128  38 63 42 F0 */	addi r3, r3, gTRKEventQueue@l
/* 8021C1CC 0021912C  48 00 24 DD */	bl TRKReleaseMutex
/* 8021C1D0 00219130  7F A3 EB 78 */	mr r3, r29
/* 8021C1D4 00219134  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 8021C1D8 00219138  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 8021C1DC 0021913C  83 A1 00 0C */	lwz r29, 0xc(r1)
/* 8021C1E0 00219140  83 81 00 08 */	lwz r28, 8(r1)
/* 8021C1E4 00219144  38 21 00 18 */	addi r1, r1, 0x18
/* 8021C1E8 00219148  80 01 00 04 */	lwz r0, 4(r1)
/* 8021C1EC 0021914C  7C 08 03 A6 */	mtlr r0
/* 8021C1F0 00219150  4E 80 00 20 */	blr 
.endfn TRKGetNextEvent

.fn TRKPostEvent, global
/* 8021C1F4 00219154  7C 08 02 A6 */	mflr r0
/* 8021C1F8 00219158  3C 80 80 3D */	lis r4, gTRKEventQueue@ha
/* 8021C1FC 0021915C  90 01 00 04 */	stw r0, 4(r1)
/* 8021C200 00219160  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 8021C204 00219164  93 E1 00 14 */	stw r31, 0x14(r1)
/* 8021C208 00219168  3B E3 00 00 */	addi r31, r3, 0
/* 8021C20C 0021916C  93 C1 00 10 */	stw r30, 0x10(r1)
/* 8021C210 00219170  3B C4 42 F0 */	addi r30, r4, gTRKEventQueue@l
/* 8021C214 00219174  38 7E 00 00 */	addi r3, r30, 0
/* 8021C218 00219178  93 A1 00 0C */	stw r29, 0xc(r1)
/* 8021C21C 0021917C  93 81 00 08 */	stw r28, 8(r1)
/* 8021C220 00219180  3B 80 00 00 */	li r28, 0
/* 8021C224 00219184  48 00 24 7D */	bl TRKAcquireMutex
/* 8021C228 00219188  3B BE 00 04 */	addi r29, r30, 4
/* 8021C22C 0021918C  80 7E 00 04 */	lwz r3, 4(r30)
/* 8021C230 00219190  2C 03 00 02 */	cmpwi r3, 2
/* 8021C234 00219194  40 82 00 0C */	bne .L_8021C240
/* 8021C238 00219198  3B 80 01 00 */	li r28, 0x100
/* 8021C23C 0021919C  48 00 00 68 */	b .L_8021C2A4
.L_8021C240:
/* 8021C240 002191A0  80 1E 00 08 */	lwz r0, 8(r30)
/* 8021C244 002191A4  38 9F 00 00 */	addi r4, r31, 0
/* 8021C248 002191A8  7C 00 1A 14 */	add r0, r0, r3
/* 8021C24C 002191AC  7C 03 0E 70 */	srawi r3, r0, 1
/* 8021C250 002191B0  7C 63 01 94 */	addze r3, r3
/* 8021C254 002191B4  54 63 08 3C */	slwi r3, r3, 1
/* 8021C258 002191B8  7C 63 00 10 */	subfc r3, r3, r0
/* 8021C25C 002191BC  1C 03 00 0C */	mulli r0, r3, 0xc
/* 8021C260 002191C0  7F FE 02 14 */	add r31, r30, r0
/* 8021C264 002191C4  38 7F 00 0C */	addi r3, r31, 0xc
/* 8021C268 002191C8  4B FF FE A9 */	bl TRKCopyEvent
/* 8021C26C 002191CC  38 9E 00 24 */	addi r4, r30, 0x24
/* 8021C270 002191D0  80 1E 00 24 */	lwz r0, 0x24(r30)
/* 8021C274 002191D4  90 1F 00 10 */	stw r0, 0x10(r31)
/* 8021C278 002191D8  80 7E 00 24 */	lwz r3, 0x24(r30)
/* 8021C27C 002191DC  38 03 00 01 */	addi r0, r3, 1
/* 8021C280 002191E0  90 1E 00 24 */	stw r0, 0x24(r30)
/* 8021C284 002191E4  80 1E 00 24 */	lwz r0, 0x24(r30)
/* 8021C288 002191E8  28 00 01 00 */	cmplwi r0, 0x100
/* 8021C28C 002191EC  40 80 00 0C */	bge .L_8021C298
/* 8021C290 002191F0  38 00 01 00 */	li r0, 0x100
/* 8021C294 002191F4  90 04 00 00 */	stw r0, 0(r4)
.L_8021C298:
/* 8021C298 002191F8  80 7D 00 00 */	lwz r3, 0(r29)
/* 8021C29C 002191FC  38 03 00 01 */	addi r0, r3, 1
/* 8021C2A0 00219200  90 1D 00 00 */	stw r0, 0(r29)
.L_8021C2A4:
/* 8021C2A4 00219204  3C 60 80 3D */	lis r3, gTRKEventQueue@ha
/* 8021C2A8 00219208  38 63 42 F0 */	addi r3, r3, gTRKEventQueue@l
/* 8021C2AC 0021920C  48 00 23 FD */	bl TRKReleaseMutex
/* 8021C2B0 00219210  7F 83 E3 78 */	mr r3, r28
/* 8021C2B4 00219214  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 8021C2B8 00219218  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 8021C2BC 0021921C  83 A1 00 0C */	lwz r29, 0xc(r1)
/* 8021C2C0 00219220  83 81 00 08 */	lwz r28, 8(r1)
/* 8021C2C4 00219224  38 21 00 18 */	addi r1, r1, 0x18
/* 8021C2C8 00219228  80 01 00 04 */	lwz r0, 4(r1)
/* 8021C2CC 0021922C  7C 08 03 A6 */	mtlr r0
/* 8021C2D0 00219230  4E 80 00 20 */	blr 
.endfn TRKPostEvent

.fn TRKConstructEvent, global
/* 8021C2D4 00219234  98 83 00 00 */	stb r4, 0(r3)
/* 8021C2D8 00219238  38 80 00 00 */	li r4, 0
/* 8021C2DC 0021923C  38 00 FF FF */	li r0, -1
/* 8021C2E0 00219240  90 83 00 04 */	stw r4, 4(r3)
/* 8021C2E4 00219244  90 03 00 08 */	stw r0, 8(r3)
/* 8021C2E8 00219248  4E 80 00 20 */	blr 
.endfn TRKConstructEvent

.fn TRKDestructEvent, global
/* 8021C2EC 0021924C  7C 08 02 A6 */	mflr r0
/* 8021C2F0 00219250  90 01 00 04 */	stw r0, 4(r1)
/* 8021C2F4 00219254  94 21 FF F8 */	stwu r1, -8(r1)
/* 8021C2F8 00219258  80 63 00 08 */	lwz r3, 8(r3)
/* 8021C2FC 0021925C  48 00 03 19 */	bl TRKReleaseBuffer
/* 8021C300 00219260  38 21 00 08 */	addi r1, r1, 8
/* 8021C304 00219264  80 01 00 04 */	lwz r0, 4(r1)
/* 8021C308 00219268  7C 08 03 A6 */	mtlr r0
/* 8021C30C 0021926C  4E 80 00 20 */	blr 
.endfn TRKDestructEvent

.section .bss, "wa"  # 0x802E9640 - 0x803E81E5
.balign 8
.obj gTRKEventQueue, global
	.skip 0x28
.endobj gTRKEventQueue
